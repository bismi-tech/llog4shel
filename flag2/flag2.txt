Skip to main content
Logo
CS 6035 O01, OCY
–
Ed Discussion


New Thread
Courses
47
22
Categories
753 others online
Use left and right arrow keys to adjust the split region size

New Thread
Filter
Use left and right arrow keys to adjust the split region size
Project Log4Shell - Flag 2 Get a Shell Thread #693
Kevin Darlington
3 days ago in Projects – Log4Shell

Pinned

Star

Watch

140
11
44
00
Views

This is the post for discussing this flag. If there's any update on the task, we'll post it here. Please, do not open new threads covering this task.

Anyone with questions about citations and plagiarism should consult the appropriate section of the course policy on misconduct.

Note: Do not share code, outside tools you used or any hints beyond the writeup or office hours to other students. We will delete threads and warn you if you overshare.

Comment

Sort by Newest 
Robert Birk Hughes
4h

Resolved
This is a dumb question, but how do I get my local ip address that nc uses without ifconfig command?


Reply

Kevin Darlington
3h
Not a dumb question at all. The VM IP is localhost (127.0.0.1) and the application is running on the docker network at 172.17.0.1. You will need to determine which one you need as part of this learning outcome. 


1
Reply

Robert Birk Hughes
5h

Resolved
Why are all of my exploit requests getting sent twice to the ldap?  Is this intentional?


Reply

Ashutosh Agarwal
4h
Yes, it’s not unusual due to nested logging. The number of requests doesn’t interfere with getting the flags.


Reply

John Michael McPhillips
10h

Resolved
Is there a trick to getting nc to open a connection? I can execute my Java test and see the correct output from my script (Just testing whoami and returning the string) in the console, but nothing in the nc window. I'm opening with 

nc -nlvp 9999
Do we need to establish sockets in the exploit?


Reply

Ashutosh Agarwal
9h
Figuring out the exploit code is part of the challenge :)


Reply

John Michael McPhillips
9h
I got it, I had to troubleshoot my IPs/localhost connections. A bit confusing since all of this is running locally and only using 1 unique container IP.


Reply

Ashutosh Agarwal
9h
Nice work!


Reply

Maria Rachel Stewart
11h

Resolved
When I add System.out.println statements to Exploit.java, compile it, and run the curl command with it, should I see the statements in the same console.log file? I'm not seeing anything there.


Reply

Ashutosh Agarwal
11h
The curl command should not directly call the LDAP server. 

Your curl command should be sent to the vulnerable application (localhost:8080). The application should then make the LDAP call as part of the exploit. I'd suggest going through the linked resources to understand how the different components work.


Reply

Maria Rachel Stewart
10h
My curl command is directly calling localhost:8080, I am using the vulnerability to make the LDAP call. I have gone through all linked resources, except the last video on "Exploitation and Mitigation" which I am watching now.  Flag 2 mentions any System.out.println statements in our Java file should show up in console.log, without any further configuration.

When running my curl command, I am seeing that it attempts to make the desired LDAP call but has a 400 error. To debug this, I am trying to see what happens when it is trying to execute the code in my Java file, but I see nothing in console.log, even when I reduce it to just 1 print statement each in the try catch.


Reply

Maria Rachel Stewart
10h
 Replying to Maria Rachel Stewart
Ok looks like that last video was what I needed. Heads-up for anyone else, read/watch literally every single linked resource.


2
Reply

Andrew Steven O'Kins
13h

Resolved
Currently hitting a roadblock and not finding anything to point in the direction of what the cause is.

I seem to be making the connections, but the python http server is printing out code 400, message Bad HTTP/0.9 request type ('0').  I confirm using the same command for the LDAP server as provided in the setup guide.


Reply

Andrew Steven O'Kins
13h
Of course I figured it out soon after making this post.

I recommend the video they provide, that helped me see what I was missing!


1
Reply

Ashutosh Agarwal
13h
Great job! 


Reply

Robert Birk Hughes
5h
Could you point to what in the video helped you with this?  I am having the same issue and I can't tell if I am starting my LDAP server incorrectly or putting in a bad exploit in my curl command


Reply

Robert Birk Hughes
5h
 Replying to Robert Birk Hughes
I figured out this issue, but now my java doesn't seem to be running properly


Reply

Kevin Darlington
5h
 Replying to Robert Birk Hughes
It is the hacksploit video in the linked resources. It is almost 1:1 flag 2.


Reply

Anonymous Quail
22h

Resolved
I don't know why i couldn't reverse shell with 127.0.0.1, but finally changed IP address and got it solved! 

good luck.


2
Reply

Joseph A Cannaday
23h

Resolved
I'm a bit confused on the role of the python http server command within the context of this flag. Should curl be used for the jndi lookup, and is the intention that this lookup would then reference the java file?


Reply

Fahim Sunka
23h
Endorsed
To answer your question, yes. For a much better picture - on the homepage of the Log4Shell project GitHub, you find a diagram in the background section that can be very helpful visually. Here the python http server is the malicious server (see the setup section as well for more details). Finally, this resource (from the Important Reference Materials) is highly recommended for this flag - https://www.youtube.com/watch?v=lJeAgQQaDEw


3
Reply

